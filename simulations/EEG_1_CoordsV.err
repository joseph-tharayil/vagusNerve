mkdir: cannot create directory ‘/gpfs/bbp.cscs.ch/project/proj85/scratch/vagusNerve/results/finalResults/Analytic-test/’: File exists
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    return maffProb * prob(d,maffvals)
    runSim(outputfolder, distanceIdx, stimulus, recording)
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    main(outputfolder,distanceIdx)
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    raise AttributeError(
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    return maffProb * prob(d,maffvals)
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                      ^^^^^^^^^^^^^^^^
                                                                       ^^^^^^
    return maffProb * prob(d,maffvals)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    raise AttributeError(
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
    raise AttributeError(
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    runSim(outputfolder, distanceIdx, stimulus, recording)
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                       ^^^^^^^^^^^^^^^^^^^^
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                      ^^^^^^^^^^^^^^^^
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    raise AttributeError(
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    runSim(outputfolder, distanceIdx, stimulus, recording)
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    raise AttributeError(
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    return maffProb * prob(d,maffvals)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    return maffProb * prob(d,maffvals)
    raise AttributeError(
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    raise AttributeError(
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
    return maffProb * prob(d,maffvals)
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
    main(outputfolder,distanceIdx)
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    runSim(outputfolder, distanceIdx, stimulus, recording)
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    raise AttributeError(
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    raise AttributeError(
    runSim(outputfolder, distanceIdx, stimulus, recording)
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    main(outputfolder,distanceIdx)
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    main(outputfolder,distanceIdx)
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    runSim(outputfolder, distanceIdx, stimulus, recording)
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    return maffProb * prob(d,maffvals)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
                       ^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
                       ^^^^^^^^^^^^^^^^^^^^
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
    return maffProb * prob(d,maffvals)
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
                      ^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
                                                                       ^^^^^^
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
                                                                       ^^^^^^
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
    raise AttributeError(
    main(outputfolder,distanceIdx)
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    main(outputfolder,distanceIdx)
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    runSim(outputfolder, distanceIdx, stimulus, recording)
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
    raise AttributeError(
    raise AttributeError(
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
    raise AttributeError(
                       ^^^^^^^^^^^^^^^^^^^^
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    main(outputfolder,distanceIdx)
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    main(outputfolder,distanceIdx)
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    return maffProb * prob(d,maffvals)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
                      ^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    runSim(outputfolder, distanceIdx, stimulus, recording)
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
    raise AttributeError(
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    return maffProb * prob(d,maffvals)
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                      ^^^^^^^^^^^^^^^^
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    raise AttributeError(
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
                       ^^^^^^^^^^^^^^^^^^^^
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    raise AttributeError(
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    return maffProb * prob(d,maffvals)
    return maffProb * prob(d,maffvals)
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
                      ^^^^^^^^^^^^^^^^
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    raise AttributeError(
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
    return maffProb * prob(d,maffvals)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
    raise AttributeError(
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
    main(outputfolder,distanceIdx)
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    main(outputfolder,distanceIdx)
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
    runSim(outputfolder, distanceIdx, stimulus, recording)
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    runSim(outputfolder, distanceIdx, stimulus, recording)
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    main(outputfolder,distanceIdx)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    runSim(outputfolder, distanceIdx, stimulus, recording)
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
                       ^^^^^^^^^^^^^^^^^^^^
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
                       ^^^^^^^^^^^^^^^^^^^^
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
    return maffProb * prob(d,maffvals)
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    return maffProb * prob(d,maffvals)
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
                      ^^^^^^^^^^^^^^^^
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
                      ^^^^^^^^^^^^^^^^
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
                       ^^^^^^^^^^^^^^^^^^^^
                                                                       ^^^^^^
                                                                       ^^^^^^
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
    return maffProb * prob(d,maffvals)
    raise AttributeError(
    raise AttributeError(
    raise AttributeError(
                      ^^^^^^^^^^^^^^^^
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    main(outputfolder,distanceIdx)
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                       ^^^^^^^^^^^^^^^^^^^^
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    return maffProb * prob(d,maffvals)
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                      ^^^^^^^^^^^^^^^^
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    main(outputfolder,distanceIdx)
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
    main(outputfolder,distanceIdx)
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    runSim(outputfolder, distanceIdx, stimulus, recording)
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
    main(outputfolder,distanceIdx)
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    main(outputfolder,distanceIdx)
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    return maffProb * prob(d,maffvals)
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                      ^^^^^^^^^^^^^^^^
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
    raise AttributeError(
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    main(outputfolder,distanceIdx)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    runSim(outputfolder, distanceIdx, stimulus, recording)
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
                       ^^^^^^^^^^^^^^^^^^^^
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    return maffProb * prob(d,maffvals)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
                      ^^^^^^^^^^^^^^^^
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    raise AttributeError(
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    raise AttributeError(
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
    return maffProb * prob(d,maffvals)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
    return maffProb * prob(d,maffvals)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    raise AttributeError(
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    main(outputfolder,distanceIdx)
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    raise AttributeError(
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    runSim(outputfolder, distanceIdx, stimulus, recording)
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    raise AttributeError(
    return maffProb * prob(d,maffvals)
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
    return maffProb * prob(d,maffvals)
                       ^^^^^^^^^^^^^^^^^^^^
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    raise AttributeError(
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
                                                                       ^^^^^^
    raise AttributeError(
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    main(outputfolder,distanceIdx)
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
                                                                       ^^^^^^
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    raise AttributeError(
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
Traceback (most recent call last):
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 31, in <module>
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    main(outputfolder,distanceIdx)
  File "/gpfs/bbp.cscs.ch/project/proj85/vagusPublication/simulations/analytic-Standoff-sideways-highConductivity.py", line 22, in main
    runSim(outputfolder, distanceIdx, stimulus, recording)
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 183, in runSim
    scalingFactorsByType = getScalingFactors(d,current,fascIdx, fascTypes, stimulusDirectory, time, velocityList, outputfolder)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/runSim.py", line 99, in getScalingFactors
    phiWeightMaff, phiWeightMeff, phiWeightUaff, phiWeightUeff = getPhiWeight(d,current,fascIdx, fascTypes, stimulusDirectory) # For each of the four fiber types, returns scaling factor for each diameter
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 37, in getPhiWeight
    p = PhiWeight(d,c,fascIdx,fascTypes,stimulusDirectory)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/phiWeight.py", line 22, in PhiWeight
    phiWeight[0][0] =  MaffProb(d,maffProb)  * recruitment[0] * numFibersPerFascicle
                       ^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 180, in MaffProb
    return maffProb * prob(d,maffvals)
                      ^^^^^^^^^^^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/vagusNerve/nerveSetup.py", line 168, in prob
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
    params = curve_fit(gammaDist,d*1e6,interpD*10,p0=[9,0.5],bounds=(0,np.Inf)) # Fits gamma distribution to digitized data
                                                                       ^^^^^^
  File "/gpfs/bbp.cscs.ch/home/tharayil/vagusEnv/lib/python3.11/site-packages/numpy/__init__.py", line 397, in __getattr__
    raise AttributeError(
AttributeError: `np.Inf` was removed in the NumPy 2.0 release. Use `np.inf` instead.. Did you mean: 'inf'?
srun: error: r1i7n1: task 32: Exited with exit code 1
srun: launch/slurm: _step_signal: Terminating StepId=2359053.0
srun: error: r1i5n19: task 18: Exited with exit code 1
srun: error: r1i7n35: task 38: Exited with exit code 1
srun: error: r1i5n0: task 1: Exited with exit code 1
srun: error: r1i5n12: task 12: Exited with exit code 1
srun: error: r1i5n1: task 2: Exited with exit code 1
srun: error: r1i5n8: task 8: Exited with exit code 1
srun: error: r1i5n14: task 14: Exited with exit code 1
srun: error: r1i7n8: task 33: Exited with exit code 1
srun: error: r1i7n10: task 34: Exited with exit code 1
srun: error: r1i5n32: task 31: Exited with exit code 1
srun: error: r1i5n17: task 17: Exited with exit code 1
srun: error: r1i5n16: task 16: Exited with exit code 1
srun: error: r1i5n15: task 15: Exited with exit code 1
srun: error: r1i5n27: task 26: Exited with exit code 1
srun: error: r1i5n7: task 7: Exited with exit code 1
srun: error: r1i4n31: task 0: Exited with exit code 1
srun: error: r1i5n11: task 11: Exited with exit code 1
srun: error: r1i5n13: task 13: Exited with exit code 1
srun: error: r1i5n29: task 28: Exited with exit code 1
srun: error: r1i5n10: task 10: Exited with exit code 1
srun: error: r1i5n3: task 4: Exited with exit code 1
srun: error: r1i7n30: task 37: Exited with exit code 1
srun: error: r1i5n2: task 3: Exited with exit code 1
srun: error: r1i5n23: task 22: Exited with exit code 1
srun: error: r1i5n26: task 25: Exited with exit code 1
srun: error: r1i5n24: task 23: Exited with exit code 1
srun: error: r1i5n22: task 21: Exited with exit code 1
srun: error: r1i5n28: task 27: Exited with exit code 1
srun: error: r1i5n25: task 24: Exited with exit code 1
srun: error: r1i7n28: task 36: Exited with exit code 1
srun: error: r1i5n31: task 30: Exited with exit code 1
srun: error: r1i5n5: task 5: Exited with exit code 1
srun: error: r1i5n30: task 29: Exited with exit code 1
srun: error: r1i5n21: task 20: Exited with exit code 1
srun: error: r1i5n6: task 6: Exited with exit code 1
srun: error: r1i5n9: task 9: Exited with exit code 1
srun: error: r1i5n20: task 19: Exited with exit code 1
srun: error: r1i7n17: task 35: Exited with exit code 1
srun: error: r1i4n3: task 3: Exited with exit code 1
srun: launch/slurm: _step_signal: Terminating StepId=2359054.0
srun: error: r1i4n29: task 20: Exited with exit code 1
srun: error: r1i4n9: task 9: Exited with exit code 1
srun: error: r1i4n11: task 11: Exited with exit code 1
srun: error: r1i4n0: task 0: Exited with exit code 1
srun: error: r1i4n15: task 15: Exited with exit code 1
srun: error: r1i4n1: task 1: Exited with exit code 1
srun: error: r1i4n16: task 16: Exited with exit code 1
srun: error: r1i4n27: task 18: Exited with exit code 1
srun: error: r1i6n3: task 24: Exited with exit code 1
srun: error: r1i4n7: task 7: Exited with exit code 1
srun: error: r1i4n4: task 4: Exited with exit code 1
srun: error: r1i6n7: task 28: Exited with exit code 1
srun: error: r1i6n4: task 25: Exited with exit code 1
srun: error: r1i4n6: task 6: Exited with exit code 1
srun: error: r1i4n5: task 5: Exited with exit code 1
srun: error: r1i6n2: task 23: Exited with exit code 1
srun: error: r1i6n1: task 22: Exited with exit code 1
srun: error: r1i4n13: task 13: Exited with exit code 1
srun: error: r1i4n10: task 10: Exited with exit code 1
srun: error: r1i4n2: task 2: Exited with exit code 1
srun: error: r1i6n10: task 31: Exited with exit code 1
srun: error: r1i6n9: task 30: Exited with exit code 1
srun: error: r1i6n5: task 26: Exited with exit code 1
srun: error: r1i6n0: task 21: Exited with exit code 1
srun: error: r1i4n8: task 8: Exited with exit code 1
srun: error: r1i6n13: task 34: Exited with exit code 1
srun: error: r1i4n14: task 14: Exited with exit code 1
srun: error: r1i4n12: task 12: Exited with exit code 1
srun: error: r1i4n28: task 19: Exited with exit code 1
srun: error: r1i6n14: task 35: Exited with exit code 1
srun: error: r1i6n8: task 29: Exited with exit code 1
srun: error: r1i6n6: task 27: Exited with exit code 1
srun: error: r1i6n17: task 38: Exited with exit code 1
srun: error: r1i6n15: task 36: Exited with exit code 1
srun: error: r1i6n12: task 33: Exited with exit code 1
srun: error: r1i6n11: task 32: Exited with exit code 1
srun: error: r1i4n17: task 17: Exited with exit code 1
srun: error: r1i6n16: task 37: Exited with exit code 1
